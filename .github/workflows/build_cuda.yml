name: Build CUDA Environment

on: [push]

env:
  DOCKER_IMAGE: ghcr.io/quansight-labs/array-api-gpu-demo-cuda:latest
  CONDA_ENV: demo

jobs:
  build:
    runs-on: "self-hosted"
    steps:
      - uses: actions/checkout@v2
      - name: Run nvidia-smi
        run: |
          nvidia-smi
      - name: Run df -h
        run: |
          df -h
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push CUDA docker image
        uses: docker/build-push-action@v2
        with:
          context: "."
          file: "cuda.Dockerfile"
          tags: |
            ${{ env.DOCKER_IMAGE }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: List docker images
        run: |
          docker images

      - name: Check installed packages version
        run: |
          echo "scikit-learn version"
          docker run $DOCKER_IMAGE bash -c 'conda run -n ${{ env.CONDA_ENV }} python -c "import sklearn; print(sklearn.__version__)"'
          echo "scipy version"
          docker run $DOCKER_IMAGE bash -c 'conda run -n ${{ env.CONDA_ENV }} python -c "import scipy; print(scipy.__version__)"'
          echo "skimage version"
          docker run $DOCKER_IMAGE bash -c 'conda run -n ${{ env.CONDA_ENV }} python -c "import skimage; print(skimage.__version__)"'
          echo "cupy version"
          docker run --gpus all $DOCKER_IMAGE bash -c 'conda run -n ${{ env.CONDA_ENV }} python -c "import cupy; print(cupy.__version__)"'
